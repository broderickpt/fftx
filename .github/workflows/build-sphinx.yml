name: build-sphinx-to-gh-pages

env:
  GITHUB_ACTOR: broderickpt
  GITHUB_REPOSITORY: broderickpt/fftx
  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

##  For now only re-gen docs when push to "main" branch
on:
  push:
    branches:
      - main
      - develop

jobs:
  build_sphinx_job:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout spiral-software
      uses: actions/checkout@v4
      with:
        repository: spiral-software/spiral-software
        ref: develop
        path: spiral
        
    - name: Checkout repo spiral-package-fftx
      uses: actions/checkout@v4
      with:
        repository: spiral-software/spiral-package-fftx
        path: spiral/namespaces/packages/fftx
        
    - name: Checkout repo spiral-package-simt
      uses: actions/checkout@v4
      with:
        repository: spiral-software/spiral-package-simt
        path: spiral/namespaces/packages/simt
        
    - name: Checkout repo spiral-package-jit
      uses: actions/checkout@v4
      with:
        repository: spiral-software/spiral-package-jit
        path: spiral/namespaces/packages/jit
        
    - name: Checkout repo spiral-package-mpi
      uses: actions/checkout@v4
      with:
        repository: spiral-software/spiral-package-mpi
        path: spiral/namespaces/packages/mpi

    - name: Checkout FFTX repository
      ##  env:
      ##    GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      uses: actions/checkout@v4
      with:
        path: fftx

    - name: install dependencies
      ##  uses: actions/checkout@v4
      run: |
        set -x
        echo "working dir = ${{ github.workspace }}"
        ls -l spiral
        ls -l spiral/namespaces/packages
        export DEBIAN_FRONTEND=noninteractive
        sudo apt-get -qqq update
        sudo apt-get install -y build-essential ca-certificates cmake pkg-config wget
        sudo apt-get install -y python3
        sudo apt-get install -y python3-pip
        pip install -U Sphinx 
        PATH=$PATH:/home/runner/.local/bin
        echo $PATH
        pip install sphinx_rtd_theme 
        pip install breathe
        sudo apt-get install -y doxygen
        sudo curl -L -o /usr/local/bin/cmake-easyinstall https://git.io/JvLxY
        sudo chmod a+x /usr/local/bin/cmake-easyinstall
        export CEI_SUDO="sudo"

    - name: build SPIRAL executable
      env:
        SPIRAL_HOME: ${{ github.workspace }}/spiral
      run: |
        echo $SPIRAL_HOME
        cd $SPIRAL_HOME
        mkdir build && cd build
        cmake .. 
        make -j 2 install

    - name: Set up Docker
      uses: docker/setup-docker@v2

    - name: Create Docker container
      id: create_container
      run: |
        CONTAINER_ID=$(docker run -d -v /github/workspace:/github/workspace ubuntu:latest tail -f /dev/null)
        echo "CONTAINER_ID=$CONTAINER_ID" >> $GITHUB_ENV
      shell: bash

    - name: Generate RST from markdown
      run: docker exec ${{ env.CONTAINER_ID }} pandoc -f gfm -t rst -o /github/workspace/fftx/docs/README.rst /github/workspace/fftx/README.md
      shell: bash

    - name: Show directory contents
      run: ls -la /github/workspace/fftx/docs
      shell: bash

    - name: Cleanup
      run: docker stop ${{ env.CONTAINER_ID }} && docker rm ${{ env.CONTAINER_ID }}
      shell: bash

    - name: build the docs
      env:
        SPIRAL_HOME: ${{ github.workspace }}/spiral
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      run: |
        set -x
        PATH=$PATH:/home/runner/.local/bin
        echo $PATH
        cd $SPIRAL_HOME/../fftx
        ls -l docs
        mkdir build && cd build
        cmake -DFFTX_MAKE_DOCS=True ..
        make Sphinx
        "../docs/buildsite.sh"
      shell: bash

